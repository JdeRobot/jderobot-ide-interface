{"version":3,"file":"src_components_VncViewer_VncViewer_tsx.4ec2c205cf197f4c8133.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://jderobot-ide-interface/./src/utils/themeProvider.tsx"],"sourcesContent":["import React, { createContext, useContext } from \"react\"\nimport { merge } from \"lodash\"\n\nexport interface Theme {\n  palette?: {\n    primary?: string\n    secondary?: string\n  }\n  roundness?: number\n  spacing?: number\n  transitionSpeed?: number\n}\n\ninterface ThemeProviderProps {\n  theme?: Theme\n  children?: React.ReactNode\n}\n\nconst defaultTheme: Theme = {\n  palette: {\n    primary: \"#666\",\n    secondary: \"#03daaf\",\n  },\n  roundness: 4,\n  spacing: 8,\n  transitionSpeed: 200,\n}\n\nconst ThemeContext = createContext(defaultTheme)\nexport const useTheme = () => useContext(ThemeContext) ?? defaultTheme\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = (props) => {\n  return (\n    <ThemeContext.Provider value={merge(defaultTheme, props.theme)}>\n      {props.children}\n    </ThemeContext.Provider>\n  )\n}"],"names":[],"sourceRoot":""}